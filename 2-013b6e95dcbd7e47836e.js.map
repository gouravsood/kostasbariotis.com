{"version":3,"sources":["webpack:///./node_modules/react-burger-menu/lib/menuFactory.js","webpack:///./node_modules/react-burger-menu/lib/BurgerMenu.js","webpack:///./node_modules/react-icons/lib/fa/envelope.js","webpack:///./node_modules/react-icons/lib/fa/github.js","webpack:///./node_modules/react-icons/lib/fa/linkedin.js","webpack:///./node_modules/react-icons/lib/fa/medium.js","webpack:///./node_modules/react-icons/lib/fa/twitter.js","webpack:///./node_modules/react-burger-menu/lib/snapsvgImporter.js","webpack:///./node_modules/react-burger-menu/lib/menus/reveal.js","webpack:///./node_modules/react-burger-menu/lib/menus/fallDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/pushRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/push.js","webpack:///./node_modules/react-burger-menu/lib/menus/bubble.js","webpack:///./node_modules/eve/eve.js","webpack:///./node_modules/snapsvg-cjs/dist/snap.svg-cjs.js","webpack:///./node_modules/react-burger-menu/lib/menus/elastic.js","webpack:///./node_modules/react-burger-menu/lib/menus/stack.js","webpack:///./node_modules/react-burger-menu/lib/CrossIcon.js","webpack:///./node_modules/react-burger-menu/lib/BurgerIcon.js","webpack:///./node_modules/react-burger-menu/lib/baseStyles.js","webpack:///./node_modules/react-burger-menu/lib/menus/slide.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_get","_x3","_x4","_x5","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","getter","get","parent","getPrototypeOf","_interopRequireDefault","obj","__esModule","default","_react","__webpack_require__","_react2","_reactDom2","_propTypes2","_baseStyles2","_BurgerIcon2","_CrossIcon2","styles","Menu","_Component","instance","TypeError","this","state","isOpen","subClass","superClass","create","constructor","setPrototypeOf","__proto__","Component","_this","options","noStateChange","newState","applyWrapperStyles","setState","onStateChange","timeoutId","clearTimeout","setTimeout","set","bodyClassName","document","querySelector","classList","pageWrap","pageWrapId","handleExternalWrapper","outerContainer","outerContainerId","id","wrapperStyles","html","body","wrapper","getElementById","builtStyles","getStyle","prop","style","forEach","element","console","error","el","index","inline","propName","replace","charAt","toUpperCase","output","width","formattedWidth","right","e","window","event","keyCode","toggleMenu","disableOverlayClick","Error","customOnKeyDown","onkeydown","disableCloseOnEsc","listenForClose","bind","morphShape","path","svg","findDOMNode","lib","select","animate","attr","pathInitial","nextProps","_this3","createElement","noOverlay","className","overlayClassName","trim","onClick","shouldDisableOverlayClick","getStyles","morphShapeClassName","height","viewBox","preserveAspectRatio","d","menuClassName","itemListClassName","Children","map","children","item","extraProps","itemClassName","filter","join","cloneElement","customCrossIcon","customIcon","crossButtonClassName","crossClassName","customBurgerIcon","burgerButtonClassName","barClassName","burgerBarClassName","propTypes","string","oneOfType","oneOf","func","bool","isRequired","number","defaultProps","module","304","t","n","slide","stack","elastic","bubble","push","pushRotate","scaleDown","scaleRotate","fallDown","reveal","305","_reactIconBase2","306","307","308","309","363","Snap","434","_menuFactory2","menuWrap","visibility","MozTransform","MsTransform","OTransform","WebkitTransform","transform","zIndex","overlay","transition","position","burgerIcon","overflow","435","perspective","perspectiveOrigin","436","transformStyle","437","transformOrigin","438","439","440","_snapsvgImporter2","pathOpen","pos","steps","split","stepsTotal","mina","nextStep","easein","left","menu","opacity","nthChild","closeButton","441","__WEBPACK_AMD_DEFINE_RESULT__","glob","current_event","stop","has","separator","comaseparator","numsort","events","firstDefined","lastDefined","objtos","Str","isArray","eve","a","b","ii","toString","String","Array","ar","name","scope","l","oldstop","args","slice","listeners","z","indexed","queue","out","ce","sort","apply","_events","items","k","j","jj","nes","names","es","concat","f","sep","RegExp","on","exist","attrs","nt","subname","cur","test","nts","off","unbind","splice","inodes","unshift","funcs","prune","once","f2","version","requestID","animations","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","Date","getTime","idgen","idprefix","timer","now","sta","val","s","ds","dur","B","speed","spd","duration","stopit","update","pause","pdif","resume","frame","res","start","end","easing","timeStamp","len","A","anim","linear","status","time","getById","easeout","Math","pow","easeinout","q","Q","sqrt","x","y","abs","backin","backout","sin","PI","bounce","p","root","w","h","nodeType","wrap","is","Element","doc","Paper","_","win","tokenRegex","objNotationRegex","toFloat","parseFloat","toInt","parseInt","math","mmax","max","mmin","min","E","round","objectToString","colourRegExp","commaSpaces","hsrg","hs","rg","pathCommand","tCommand","pathValues","ID","type","xlink","xmlns","hub","$","createTextNode","text","createComment","substring","getAttributeNS","getAttribute","nodeValue","setAttributeNS","setAttribute","removeAttribute","createElementNS","o","toLowerCase","isFinite","cacher","postprocessor","newf","arg","cache","count","array","shift","rad","deg","url","format","str","all","quote","quotedName","isFunc","clone","angle","tan","cos","asin","num","acos","atan","atan2","x1","y1","x2","y2","x3","y3","len2","closestPoint","distance2","dx","dy","best","bestLength","scan","scanDistance","pathNode","node","pathLength","getTotalLength","precision","pathSegList","numberOfItems","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","tolerance","rem","getRGB","colour","indexOf","r","g","hex","rgbtoString","toHex","red","green","blue","rgb","match","hsb2rgb","hsl2rgb","hsb","hsl","toFixed","color","getElementsByTagName","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","clr","packageRGB","rgb2hsl","rgb2hsb","v","R","G","X","C","V","L","M","m","parsePathString","pathString","pth","arr","paramCounts","c","u","data","params","parseTransformString","TString","getSomeSVG","ownerSVGElement","add2group","list","appendChild","childNodes","snap","paper","tagName","nodeName","anims","add","mask","pattern","symbol","method","Fragment","frag","make","defs","proto","ownerDocument","dom","contentDocument","svgTransform2string","tstr","rgTransform","transform2matrix","bbox","tdata","Matrix","bb","tlen","command","absolute","inver","invert","translate","rotate","scale","_unit2px","mgr","getW","getBBox","getH","nam","class","fill","removeChild","contains","compareDocumentPosition","getSomeDefs","parentNode","pdefs","query","selectAll","nodelist","querySelectorAll","setInterval","attributes","json","att","parse","createDocumentFragment","full","div","innerHTML","firstChild","fragment","ch","toJSON","jsonFiller","css","lastIndexOf","letter","cssAttr","alignment-baseline","baseline-shift","clip","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cursor","direction","display","dominant-baseline","enable-background","fill-opacity","fill-rule","flood-color","flood-opacity","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-orientation-horizontal","glyph-orientation-vertical","image-rendering","kerning","letter-spacing","lighting-color","marker","marker-end","marker-mid","marker-start","pointer-events","shape-rendering","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","unicode-bidi","word-spacing","writing-mode","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","onreadystatechange","readyState","send","load","responseText","getElementByPoint","canvas","elem","box","docElem","clientTop","clientLeft","elementFromPoint","opera","so","getBoundingClientRect","documentElement","top","pageYOffset","scrollTop","pageXOffset","scrollLeft","sr","createSVGRect","hits","getIntersectionList","plugin","elproto","unit2px","isWithoutTransform","getClientRects","removed","localMatrix","original","href","pathfinder","deflt","bboxwt","realPath","matrix","propString","extractTransform","doReturn","papa","global","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","it","appendTo","prepend","first","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","xlink:href","cloneNode","els","ids","uses","urltest","linktest","oldid","old","fs","toDefs","toPattern","patternUnits","refX","refY","cx","cy","markerWidth","markerHeight","orient","eldata","chld","removeData","outerSVG","innerSVG","toDataURL","btoa","contents","unescape","matrixproto","norm","normalize","mag","aNew","bNew","multLeft","cNew","eNew","me","skewX","skew","skewY","fromCharCode","offset","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","clipIt","reURLValue","URL","fillStroke","grad","gradient","deurl","gradrg","setFontSize","fontSize","getFontSize","tokens","stops","seed","step","toAbsolute","txt","baseVal","vb","rx","ry","tp","textPath","tuner","chunk","tuned","setter","textExtract","chi","textContent","internal","rgNotSpace","addClass","clazz","finalValue","classes","curClasses","removeClass","hasClass","toggleClass","flag","operators","+","-","/","*","reUnit","reAddon","getNumber","plus","evnt","atr","unit","aUnit","op","isNaN","bplus","from","to","rect","circle","preload","onerror","src","img","cssText","onload","image","offsetWidth","offsetHeight","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","inserted","GgetBBox","GsetStops","addStop","gradientLinear","setStops","gradientRadial","fx","fy","gradientUnits","clear","next","p2s","paths","ps","sleep","r1","r2","r0","rectPath","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","x4","y4","ll","t2","getLengthFactory","istotal","subpath","O","onlystart","point","sp","subpaths","path2curve","getSubpathsAtLength","t1","t13","t12","t3","mx","my","nx","ny","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","intersect","denominator","px","py","px2","py2","interHelper","bez1","bez2","justCount","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","interPathHelper","path1","path2","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","pathBBox","Y","dim","xmin","ymin","ellipsePath","getPath","pathToAbsolute","pa0","pa","crz","dots","pop","catmullRom2bezier","l2c","q2c","ax","ay","x0","y0","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","a2c","large_arc_flag","sweep_flag","recursive","_120","f1","rx2","ry2","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","crp","iLen","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","lowerCase","rel","toCubic","pathi","Set","bindings","setproto","thisArg","Animation","each","begin","handler","cb","callbacker","aname","unbound","insertion","tail","todel","arglen","exclude","getEmpty","getViewBox","getColour","path2array","isNumeric","equal","Number","tt1","tt2","maxlength","arr1","arr2","bUnit","supportsTouch","touchMap","mousedown","mousemove","mouseup","getScroll","preventTouch","originalEvent","preventDefault","stopTouch","stopPropagation","addEvent","fn","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","addEventListener","removeEventListener","drag","dragMove","dragi","touch","touches","identifier","_drag","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","eventName","hover","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","origTransform","init","undrag","unmousedown","pproto","rgurl","filstr","filterUnits","blur","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","animation","inAnim","_attrs","_callback","curStatus","eq","fkeys","tkeys","keys","saveColor","colors","A100","A200","A400","A700","mui","flat","pink","purple","deeppurple","indigo","lightblue","cyan","teal","lightgreen","lime","yellow","amber","orange","deeporange","brown","grey","bluegrey","turquoise","greensea","sunflower","emerland","nephritis","carrot","pumpkin","peterriver","belizehole","alizarin","pomegranate","amethyst","wisteria","clouds","silver","wetasphalt","midnightblue","concrete","asbestos","importMUIColors","whiteSpace","boxSizing","itemList","444","445","_x","_x2","CrossIcon","icon","bmCross","getCrossStyle","bmCrossButton","margin","padding","border","textIndent","background","outline","446","BurgerIcon","bmIcon","bar","getLineStyle","bmBurgerBars","bmBurgerButton","onMouseOver","onMouseOut","447","448"],"mappings":"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","file":"2-013b6e95dcbd7e47836e.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x3, _x4, _x5) { var _again = true; _function: while (_again) { var object = _x3, property = _x4, receiver = _x5; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x3 = parent; _x4 = property; _x5 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _baseStyles = require('./baseStyles');\n\nvar _baseStyles2 = _interopRequireDefault(_baseStyles);\n\nvar _BurgerIcon = require('./BurgerIcon');\n\nvar _BurgerIcon2 = _interopRequireDefault(_BurgerIcon);\n\nvar _CrossIcon = require('./CrossIcon');\n\nvar _CrossIcon2 = _interopRequireDefault(_CrossIcon);\n\nexports['default'] = function (styles) {\n  var Menu = (function (_Component) {\n    _inherits(Menu, _Component);\n\n    function Menu(props) {\n      _classCallCheck(this, Menu);\n\n      _get(Object.getPrototypeOf(Menu.prototype), 'constructor', this).call(this, props);\n      this.state = {\n        isOpen: false\n      };\n    }\n\n    _createClass(Menu, [{\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        var _this = this;\n\n        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n        var isOpen = options.isOpen;\n        var noStateChange = options.noStateChange;\n\n        var newState = {\n          isOpen: typeof isOpen !== 'undefined' ? isOpen : !this.state.isOpen\n        };\n\n        this.applyWrapperStyles();\n\n        this.setState(newState, function () {\n          !noStateChange && _this.props.onStateChange(newState);\n\n          // Timeout ensures wrappers are cleared after animation finishes.\n          _this.timeoutId && clearTimeout(_this.timeoutId);\n          _this.timeoutId = setTimeout(function () {\n            _this.timeoutId = null;\n            if (!newState.isOpen) {\n              _this.applyWrapperStyles(false);\n            }\n          }, 500);\n        });\n      }\n\n      // Applies component-specific styles to external wrapper elements.\n    }, {\n      key: 'applyWrapperStyles',\n      value: function applyWrapperStyles() {\n        var set = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n        if (this.props.bodyClassName) {\n          var body = document.querySelector('body');\n          body.classList[set ? 'add' : 'remove'](this.props.bodyClassName);\n        }\n\n        if (styles.pageWrap && this.props.pageWrapId) {\n          this.handleExternalWrapper(this.props.pageWrapId, styles.pageWrap, set);\n        }\n\n        if (styles.outerContainer && this.props.outerContainerId) {\n          this.handleExternalWrapper(this.props.outerContainerId, styles.outerContainer, set);\n        }\n      }\n\n      // Sets or unsets styles on DOM elements outside the menu component.\n      // This is necessary for correct page interaction with some of the menus.\n      // Throws and returns if the required external elements don't exist,\n      // which means any external page animations won't be applied.\n    }, {\n      key: 'handleExternalWrapper',\n      value: function handleExternalWrapper(id, wrapperStyles, set) {\n        var html = document.querySelector('html');\n        var body = document.querySelector('body');\n        var wrapper = document.getElementById(id);\n\n        if (!wrapper) {\n          console.error(\"Element with ID '\" + id + \"' not found\");\n          return;\n        }\n\n        var builtStyles = this.getStyle(wrapperStyles);\n\n        for (var prop in builtStyles) {\n          if (builtStyles.hasOwnProperty(prop)) {\n            wrapper.style[prop] = set ? builtStyles[prop] : '';\n          }\n        }\n\n        // Prevent any horizontal scroll.\n        [html, body].forEach(function (element) {\n          element.style['overflow-x'] = set ? 'hidden' : '';\n        });\n      }\n\n      // Builds styles incrementally for a given element.\n    }, {\n      key: 'getStyles',\n      value: function getStyles(el, index, inline) {\n        var propName = 'bm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase());\n\n        // Set base styles.\n        var output = _baseStyles2['default'][el] ? this.getStyle(_baseStyles2['default'][el]) : {};\n\n        // Add animation-specific styles.\n        if (styles[el]) {\n          output = _extends({}, output, this.getStyle(styles[el], index + 1));\n        }\n\n        // Add custom styles.\n        if (this.props.styles[propName]) {\n          output = _extends({}, output, this.props.styles[propName]);\n        }\n\n        // Add element inline styles.\n        if (inline) {\n          output = _extends({}, output, inline);\n        }\n\n        return output;\n      }\n    }, {\n      key: 'getStyle',\n      value: function getStyle(style, index) {\n        var width = this.props.width;\n\n        var formattedWidth = typeof width !== 'string' ? width + 'px' : width;\n        return style(this.state.isOpen, formattedWidth, this.props.right, index);\n      }\n    }, {\n      key: 'listenForClose',\n      value: function listenForClose(e) {\n        e = e || window.event;\n\n        if (this.state.isOpen && (e.key === 'Escape' || e.keyCode === 27)) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'shouldDisableOverlayClick',\n      value: function shouldDisableOverlayClick() {\n        if (typeof this.props.disableOverlayClick === 'function') {\n          return this.props.disableOverlayClick();\n        } else {\n          return this.props.disableOverlayClick;\n        }\n      }\n    }, {\n      key: 'componentWillMount',\n      value: function componentWillMount() {\n        if (!styles) {\n          throw new Error('No styles supplied');\n        }\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        // Bind ESC key handler (unless disabled or custom function supplied).\n        if (this.props.customOnKeyDown) {\n          window.onkeydown = this.props.customOnKeyDown;\n        } else if (!this.props.disableCloseOnEsc) {\n          window.onkeydown = this.listenForClose.bind(this);\n        }\n\n        // Allow initial open state to be set by props.\n        if (this.props.isOpen) {\n          this.toggleMenu({ isOpen: true, noStateChange: true });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        window.onkeydown = null;\n\n        this.applyWrapperStyles(false);\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n        var _this2 = this;\n\n        if (styles.svg) {\n          (function () {\n            var morphShape = _reactDom2['default'].findDOMNode(_this2, 'bm-morph-shape');\n            var path = styles.svg.lib(morphShape).select('path');\n\n            if (_this2.state.isOpen) {\n              // Animate SVG path.\n              styles.svg.animate(path);\n            } else {\n              // Reset path (timeout ensures animation happens off screen).\n              setTimeout(function () {\n                path.attr('d', styles.svg.pathInitial);\n              }, 300);\n            }\n          })();\n        }\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        if (typeof nextProps.isOpen !== 'undefined' && nextProps.isOpen !== this.state.isOpen) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n\n        return _react2['default'].createElement(\n          'div',\n          null,\n          !this.props.noOverlay && _react2['default'].createElement('div', {\n            className: ('bm-overlay ' + this.props.overlayClassName).trim(),\n            onClick: function () {\n              return !_this3.shouldDisableOverlayClick() && _this3.toggleMenu();\n            },\n            style: this.getStyles('overlay')\n          }),\n          _react2['default'].createElement(\n            'div',\n            {\n              id: this.props.id,\n              className: ('bm-menu-wrap ' + this.props.className).trim(),\n              style: this.getStyles('menuWrap')\n            },\n            styles.svg && _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-morph-shape ' + this.props.morphShapeClassName).trim(),\n                style: this.getStyles('morphShape')\n              },\n              _react2['default'].createElement(\n                'svg',\n                {\n                  width: '100%',\n                  height: '100%',\n                  viewBox: '0 0 100 800',\n                  preserveAspectRatio: 'none'\n                },\n                _react2['default'].createElement('path', { d: styles.svg.pathInitial })\n              )\n            ),\n            _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-menu ' + this.props.menuClassName).trim(),\n                style: this.getStyles('menu')\n              },\n              _react2['default'].createElement(\n                'nav',\n                {\n                  className: ('bm-item-list ' + this.props.itemListClassName).trim(),\n                  style: this.getStyles('itemList')\n                },\n                _react2['default'].Children.map(this.props.children, function (item, index) {\n                  if (item) {\n                    var classList = ['bm-item', _this3.props.itemClassName, item.props.className].filter(function (className) {\n                      return !!className;\n                    }).join(' ');\n                    var extraProps = {\n                      key: index,\n                      className: classList,\n                      style: _this3.getStyles('item', index, item.props.style)\n                    };\n                    return _react2['default'].cloneElement(item, extraProps);\n                  }\n                })\n              )\n            ),\n            this.props.customCrossIcon !== false && _react2['default'].createElement(\n              'div',\n              { style: this.getStyles('closeButton') },\n              _react2['default'].createElement(_CrossIcon2['default'], {\n                onClick: function () {\n                  return _this3.toggleMenu();\n                },\n                styles: this.props.styles,\n                customIcon: this.props.customCrossIcon,\n                className: this.props.crossButtonClassName,\n                crossClassName: this.props.crossClassName\n              })\n            )\n          ),\n          this.props.customBurgerIcon !== false && _react2['default'].createElement(\n            'div',\n            { style: this.getStyles('burgerIcon') },\n            _react2['default'].createElement(_BurgerIcon2['default'], {\n              onClick: function () {\n                return _this3.toggleMenu();\n              },\n              styles: this.props.styles,\n              customIcon: this.props.customBurgerIcon,\n              className: this.props.burgerButtonClassName,\n              barClassName: this.props.burgerBarClassName\n            })\n          )\n        );\n      }\n    }]);\n\n    return Menu;\n  })(_react.Component);\n\n  Menu.propTypes = {\n    bodyClassName: _propTypes2['default'].string,\n    burgerBarClassName: _propTypes2['default'].string,\n    burgerButtonClassName: _propTypes2['default'].string,\n    crossButtonClassName: _propTypes2['default'].string,\n    crossClassName: _propTypes2['default'].string,\n    customBurgerIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customCrossIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customOnKeyDown: _propTypes2['default'].func,\n    disableCloseOnEsc: _propTypes2['default'].bool,\n    disableOverlayClick: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].func]),\n    id: _propTypes2['default'].string,\n    isOpen: _propTypes2['default'].bool,\n    itemClassName: _propTypes2['default'].string,\n    itemListClassName: _propTypes2['default'].string,\n    menuClassName: _propTypes2['default'].string,\n    morphShapeClassName: _propTypes2['default'].string,\n    noOverlay: _propTypes2['default'].bool,\n    onStateChange: _propTypes2['default'].func,\n    outerContainerId: styles && styles.outerContainer ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    overlayClassName: _propTypes2['default'].string,\n    pageWrapId: styles && styles.pageWrap ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    right: _propTypes2['default'].bool,\n    styles: _propTypes2['default'].object,\n    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])\n  };\n\n  Menu.defaultProps = {\n    bodyClassName: '',\n    burgerBarClassName: '',\n    burgerButtonClassName: '',\n    className: '',\n    crossButtonClassName: '',\n    crossClassName: '',\n    disableCloseOnEsc: false,\n    id: '',\n    itemClassName: '',\n    itemListClassName: '',\n    menuClassName: '',\n    morphShapeClassName: '',\n    noOverlay: false,\n    onStateChange: function onStateChange() {},\n    outerContainerId: '',\n    overlayClassName: '',\n    pageWrapId: '',\n    styles: {},\n    width: 300\n  };\n\n  return Menu;\n};\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = {\n  slide: require('./menus/slide'),\n  stack: require('./menus/stack'),\n  elastic: require('./menus/elastic'),\n  bubble: require('./menus/bubble'),\n  push: require('./menus/push'),\n  pushRotate: require('./menus/pushRotate'),\n  scaleDown: require('./menus/scaleDown'),\n  scaleRotate: require('./menus/scaleRotate'),\n  fallDown: require('./menus/fallDown'),\n  reveal: require('./menus/reveal')\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactIconBase = require('react-icon-base');\n\nvar _reactIconBase2 = _interopRequireDefault(_reactIconBase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FaEnvelope = function FaEnvelope(props) {\n    return _react2.default.createElement(\n        _reactIconBase2.default,\n        _extends({ viewBox: '0 0 40 40' }, props),\n        _react2.default.createElement(\n            'g',\n            null,\n            _react2.default.createElement('path', { d: 'm40 15.8v17.8q0 1.4-1 2.5t-2.6 1h-32.8q-1.5 0-2.6-1t-1-2.5v-17.8q1 1.1 2.3 2 8 5.5 11 7.7 1.3 0.9 2.1 1.5t2.1 1 2.5 0.6h0q1.2 0 2.5-0.6t2.1-1 2.1-1.5q3.7-2.8 11.1-7.7 1.2-0.9 2.2-1.9z m0-6.5q0 1.7-1.1 3.4t-2.7 2.7q-8.4 5.8-10.5 7.3-0.2 0.1-0.9 0.6t-1.2 0.9-1.2 0.7-1.3 0.6-1.1 0.2h0q-0.5 0-1.1-0.2t-1.3-0.6-1.2-0.7-1.2-0.9-0.9-0.6q-2.1-1.5-5.9-4.1t-4.6-3.2q-1.3-0.9-2.6-2.6t-1.2-3q0-1.8 0.9-2.9t2.7-1.2h32.8q1.5 0 2.5 1.1t1.1 2.5z' })\n        )\n    );\n};\n\nexports.default = FaEnvelope;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactIconBase = require('react-icon-base');\n\nvar _reactIconBase2 = _interopRequireDefault(_reactIconBase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FaGithub = function FaGithub(props) {\n    return _react2.default.createElement(\n        _reactIconBase2.default,\n        _extends({ viewBox: '0 0 40 40' }, props),\n        _react2.default.createElement(\n            'g',\n            null,\n            _react2.default.createElement('path', { d: 'm20.1 2.9q4.7 0 8.6 2.3t6.3 6.2 2.3 8.6q0 5.6-3.3 10.1t-8.4 6.2q-0.6 0.1-0.9-0.2t-0.3-0.7q0 0 0-1.7t0-3q0-2.1-1.2-3.1 1.3-0.2 2.3-0.4t2.1-0.9 1.8-1.5 1.2-2.3 0.5-3.4q0-2.7-1.8-4.6 0.8-2-0.2-4.5-0.6-0.2-1.8 0.2t-2 1l-0.9 0.5q-2-0.6-4.3-0.6t-4.2 0.6q-0.4-0.2-1-0.6t-1.9-0.8-1.9-0.3q-1 2.5-0.1 4.5-1.8 1.9-1.8 4.6 0 1.9 0.5 3.4t1.1 2.3 1.8 1.5 2.1 0.9 2.3 0.4q-0.9 0.8-1.1 2.3-0.4 0.2-1 0.3t-1.3 0.1-1.4-0.5-1.3-1.4q-0.4-0.7-1-1.1t-1.1-0.6l-0.5 0q-0.5 0-0.6 0.1t-0.1 0.2 0.2 0.3 0.2 0.3l0.2 0.1q0.5 0.2 1 0.9t0.7 1.1l0.2 0.5q0.3 0.9 1 1.4t1.5 0.7 1.5 0.1 1.3-0.1l0.5 0q0 0.8 0 1.9t0 1.2q0 0.5-0.3 0.7t-0.9 0.2q-5.2-1.7-8.4-6.2t-3.3-10.1q0-4.7 2.3-8.6t6.2-6.2 8.6-2.3z m-10.6 24.6q0.1-0.2-0.2-0.3-0.2-0.1-0.2 0.1-0.1 0.1 0.1 0.2 0.2 0.2 0.3 0z m0.7 0.7q0.1-0.1-0.1-0.3-0.2-0.2-0.3-0.1-0.2 0.1 0 0.4 0.3 0.2 0.4 0z m0.7 1q0.2-0.1 0-0.4-0.2-0.3-0.4-0.1-0.2 0.1 0 0.4t0.4 0.1z m0.9 1q0.2-0.2-0.1-0.4-0.3-0.3-0.4-0.1-0.2 0.2 0 0.4 0.3 0.3 0.5 0.1z m1.3 0.5q0-0.2-0.3-0.3-0.4-0.1-0.4 0.1t0.2 0.4q0.4 0.1 0.5-0.2z m1.4 0.1q0-0.2-0.4-0.2-0.4 0-0.4 0.2 0 0.3 0.4 0.3 0.4 0 0.4-0.3z m1.3-0.2q-0.1-0.2-0.4-0.2-0.4 0.1-0.3 0.4t0.4 0.1 0.3-0.3z' })\n        )\n    );\n};\n\nexports.default = FaGithub;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactIconBase = require('react-icon-base');\n\nvar _reactIconBase2 = _interopRequireDefault(_reactIconBase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FaLinkedin = function FaLinkedin(props) {\n    return _react2.default.createElement(\n        _reactIconBase2.default,\n        _extends({ viewBox: '0 0 40 40' }, props),\n        _react2.default.createElement(\n            'g',\n            null,\n            _react2.default.createElement('path', { d: 'm10.8 13.9v22.2h-7.4v-22.1h7.4z m0.5-6.8q0 1.7-1.2 2.7t-3 1.1h0q-1.9 0-3-1.1t-1.1-2.7q0-1.6 1.2-2.7t3-1.1 2.9 1.1 1.2 2.7z m26 16.3v12.7h-7.4v-11.9q0-2.3-0.9-3.6t-2.8-1.4q-1.4 0-2.3 0.8t-1.5 1.9q-0.2 0.7-0.2 1.8v12.4h-7.3q0-8.9 0-14.5t0-6.6l0-1h7.3v3.2h-0.1q0.5-0.7 1-1.3t1.2-1.1 2-1 2.5-0.4q3.8 0 6.2 2.6t2.3 7.4z' })\n        )\n    );\n};\n\nexports.default = FaLinkedin;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactIconBase = require('react-icon-base');\n\nvar _reactIconBase2 = _interopRequireDefault(_reactIconBase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FaMedium = function FaMedium(props) {\n    return _react2.default.createElement(\n        _reactIconBase2.default,\n        _extends({ viewBox: '0 0 40 40' }, props),\n        _react2.default.createElement(\n            'g',\n            null,\n            _react2.default.createElement('path', { d: 'm13.3 9.4v26.2q0 0.5-0.3 0.9t-0.8 0.4q-0.3 0-0.7-0.2l-10.4-5.2q-0.5-0.2-0.8-0.7t-0.3-1v-25.5q0-0.4 0.2-0.8t0.7-0.3q0.3 0 1 0.4l11.4 5.7q0 0.1 0 0.1z m1.5 2.3l11.9 19.3-11.9-6v-13.3z m25.2 0.4v23.5q0 0.5-0.3 0.9t-0.9 0.3-1-0.3l-9.9-4.9z m-0.1-2.7q0 0-5.7 9.3t-6.7 10.9l-8.7-14.1 7.2-11.8q0.4-0.6 1.2-0.6 0.3 0 0.6 0.1l12 6q0.1 0.1 0.1 0.2z' })\n        )\n    );\n};\n\nexports.default = FaMedium;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactIconBase = require('react-icon-base');\n\nvar _reactIconBase2 = _interopRequireDefault(_reactIconBase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FaTwitter = function FaTwitter(props) {\n    return _react2.default.createElement(\n        _reactIconBase2.default,\n        _extends({ viewBox: '0 0 40 40' }, props),\n        _react2.default.createElement(\n            'g',\n            null,\n            _react2.default.createElement('path', { d: 'm37.7 9.1q-1.5 2.2-3.7 3.7 0.1 0.3 0.1 1 0 2.9-0.9 5.8t-2.6 5.5-4.1 4.7-5.7 3.3-7.2 1.2q-6.1 0-11.1-3.3 0.8 0.1 1.7 0.1 5 0 9-3-2.4-0.1-4.2-1.5t-2.6-3.5q0.8 0.1 1.4 0.1 1 0 1.9-0.3-2.5-0.5-4.1-2.5t-1.7-4.6v0q1.5 0.8 3.3 0.9-1.5-1-2.4-2.6t-0.8-3.4q0-2 0.9-3.7 2.7 3.4 6.6 5.4t8.3 2.2q-0.2-0.9-0.2-1.7 0-3 2.1-5.1t5.1-2.1q3.2 0 5.3 2.3 2.4-0.5 4.6-1.7-0.8 2.5-3.2 3.9 2.1-0.2 4.2-1.1z' })\n        )\n    );\n};\n\nexports.default = FaTwitter;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function () {\n  var Snap = undefined;\n  try {\n    Snap = require('snapsvg-cjs');\n  } finally {\n    return Snap;\n  }\n};\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      visibility: isOpen ? 'visible' : 'hidden',\n      MozTransform: 'translate3d(0, 0, 0)',\n      MsTransform: 'translate3d(0, 0, 0)',\n      OTransform: 'translate3d(0, 0, 0)',\n      WebkitTransform: 'translate3d(0, 0, 0)',\n      transform: 'translate3d(0, 0, 0)',\n      zIndex: 1000\n    };\n  },\n\n  overlay: function overlay(isOpen, width, right) {\n    return {\n      zIndex: 1400,\n      MozTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.5s',\n      visibility: isOpen ? 'visible' : 'hidden'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s',\n      zIndex: 1200,\n      position: 'relative'\n    };\n  },\n\n  burgerIcon: function burgerIcon(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.1s',\n      position: 'relative',\n      zIndex: 1300\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transition: 'all 0.5s ease-in-out'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      perspectiveOrigin: '0% 50%',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      MsTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      OTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transformOrigin: '100%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer() {\n    return {\n      perspective: '1500px'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transformOrigin: right ? '100% 50%' : '0% 50%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-7.312,0H0c0,0,0,113.839,0,400c0,264.506,0,400,0,400h-7.312V0z',\n    pathOpen: 'M-7.312,0H15c0,0,66,113.339,66,399.5C81,664.006,15,800,15,800H-7.312V0z;M-7.312,0H100c0,0,0,113.839,0,400c0,264.506,0,400,0,400H-7.312V0z',\n    animate: function animate(path) {\n      var pos = 0;\n      var steps = this.pathOpen.split(';');\n      var stepsTotal = steps.length;\n      var mina = window.mina;\n\n      var nextStep = function nextStep() {\n        if (pos > stepsTotal - 1) return;\n\n        path.animate({ path: steps[pos] }, pos === 0 ? 400 : 500, pos === 0 ? mina.easein : mina.elastic, function () {\n          nextStep();\n        });\n\n        pos++;\n      };\n\n      nextStep();\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      MsTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      OTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      WebkitTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      transform: right ? 'rotateY(180deg)' : 'rotateY(0deg)'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: isOpen ? 'transform 0.4s 0s' : 'transform 0.4s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    width -= 140;\n    return {\n      position: 'fixed',\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s, transform 0.3s 0.4s' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  closeButton: function closeButton(isOpen, width, right) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.4 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.4\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        },\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            var oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event;\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n    // Undocumented. Debug only.\n    eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events],\n            inodes = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                        inodes.unshift({\n                            n: e,\n                            name: names[i]\n                        });\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                        inodes.unshift({\n                            n: e,\n                            name: key\n                        });\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n        // prune inner nodes in path\n        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n            e = inodes[i];\n            for (key in e.n[e.name].f) {\n                // not empty (has listeners)\n                continue prune;\n            }\n            for (key in e.n[e.name].n) {\n                // not empty (has children)\n                continue prune;\n            }\n            // is empty\n            delete e.n[e.name];\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    glob.eve = eve;\n    typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () { return eve; }) : glob.eve = eve;\n})(typeof window != \"undefined\" ? window : this);\n","window.eve = require('eve')\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            } catch (e) {\n                return null;\n            }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nmodule.exports = Snap\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-1,0h101c0,0-97.833,153.603-97.833,396.167C2.167,627.579,100,800,100,800H-1V0z',\n    pathOpen: 'M-1,0h101c0,0,0-1,0,395c0,404,0,405,0,405H-1V0z',\n    animate: function animate(path) {\n      path.animate({ path: this.pathOpen }, 400, window.mina.easeinout);\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: 120,\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : '',\n      MsTransform: right ? 'rotateY(180deg)' : '',\n      OTransform: right ? 'rotateY(180deg)' : '',\n      WebkitTransform: right ? 'rotateY(180deg)' : '',\n      transform: right ? 'rotateY(180deg)' : ''\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.3s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      width: 180,\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      overflow: 'visible'\n    };\n  },\n\n  itemList: function itemList(isOpen, width, right) {\n    if (right) {\n      return {\n        position: 'relative',\n        left: '-110px',\n        width: '170%',\n        overflow: 'auto'\n      };\n    }\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transition: isOpen ? 'all 0.3s' : 'all 0.3s 0.1s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0.4s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0s 0.2s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar CrossIcon = (function (_Component) {\n  _inherits(CrossIcon, _Component);\n\n  function CrossIcon() {\n    _classCallCheck(this, CrossIcon);\n\n    _get(Object.getPrototypeOf(CrossIcon.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(CrossIcon, [{\n    key: 'getCrossStyle',\n    value: function getCrossStyle(type) {\n      return {\n        position: 'absolute',\n        width: 3,\n        height: 14,\n        transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon;\n      var buttonWrapperStyle = {\n        position: 'absolute',\n        width: 24,\n        height: 24,\n        right: 8,\n        top: 8\n      };\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        textIndent: -9999,\n        background: 'transparent',\n        outline: 'none',\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-cross',\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmCross)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          { style: { position: 'absolute', top: '6px', right: '14px' } },\n          ['before', 'after'].map(function (type, i) {\n            return _react2['default'].createElement('span', {\n              key: i,\n              className: ('bm-cross ' + _this.props.crossClassName).trim(),\n              style: _extends({}, _this.getCrossStyle(type), _this.props.styles.bmCross)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-cross-button ' + this.props.className).trim(),\n          style: _extends({}, buttonWrapperStyle, this.props.styles.bmCrossButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          { onClick: this.props.onClick, style: buttonStyle },\n          'Close Menu'\n        )\n      );\n    }\n  }]);\n\n  return CrossIcon;\n})(_react.Component);\n\nexports['default'] = CrossIcon;\n\nCrossIcon.propTypes = {\n  crossClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nCrossIcon.defaultProps = {\n  crossClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar BurgerIcon = (function (_Component) {\n  _inherits(BurgerIcon, _Component);\n\n  function BurgerIcon(props) {\n    _classCallCheck(this, BurgerIcon);\n\n    _get(Object.getPrototypeOf(BurgerIcon.prototype), 'constructor', this).call(this, props);\n    this.state = {\n      hover: false\n    };\n  }\n\n  _createClass(BurgerIcon, [{\n    key: 'getLineStyle',\n    value: function getLineStyle(index) {\n      return {\n        position: 'absolute',\n        height: '20%',\n        left: 0,\n        right: 0,\n        top: 20 * (index * 2) + '%',\n        opacity: this.state.hover ? 0.6 : 1\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon = undefined;\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        opacity: 0,\n        fontSize: 8,\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-icon',\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmIcon)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          null,\n          [0, 1, 2].map(function (bar) {\n            return _react2['default'].createElement('span', {\n              key: bar,\n              className: ('bm-burger-bars ' + _this.props.barClassName).trim(),\n              style: _extends({}, _this.getLineStyle(bar), _this.props.styles.bmBurgerBars)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-burger-button ' + this.props.className).trim(),\n          style: _extends({ zIndex: 1000 }, this.props.styles.bmBurgerButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          {\n            onClick: this.props.onClick,\n            onMouseOver: function () {\n              return _this.setState({ hover: true });\n            },\n            onMouseOut: function () {\n              return _this.setState({ hover: false });\n            },\n            style: buttonStyle\n          },\n          'Open Menu'\n        )\n      );\n    }\n  }]);\n\n  return BurgerIcon;\n})(_react.Component);\n\nexports['default'] = BurgerIcon;\n\nBurgerIcon.propTypes = {\n  barClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nBurgerIcon.defaultProps = {\n  barClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar styles = {\n  overlay: function overlay(isOpen) {\n    return {\n      position: 'fixed',\n      zIndex: 1000,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.3)',\n      opacity: isOpen ? 1 : 0,\n      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      zIndex: 1100,\n      width: width,\n      height: '100%',\n      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  menu: function menu() {\n    return {\n      height: '100%',\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    };\n  },\n\n  itemList: function itemList() {\n    return {\n      height: '100%'\n    };\n  },\n\n  item: function item() {\n    return {\n      display: 'block',\n      outline: 'none'\n    };\n  }\n};\n\nexports['default'] = styles;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];"],"sourceRoot":""}